%YAML 1.2
---
# See http://www.sublimetext.com/docs/3/syntax.html
file_extensions:
  - play
  - liber
scope: source.liber

contexts:
  main:
    - include: Ë®ªÈáã
    - include: Â∞çË©±
    - include: ÂµåÂÖ•py
    - include: ÂµåÂÖ•html
    - include: ÂµåÂÖ•js
    - include: Ë∫çÈªû
    - include: ÂäüËÉΩ
    - include: Èè°È†≠
    - include: Èè°È†≠
    - include: Ë∑≥ËΩâ
    - include: ÂúñÁâá
    - include: ÊåÅÁ∫å
    - include: ÊóÅÁôΩ

  Ë®ªÈáã:
    - match: '^[#*]'
      scope: punctuation.definition.comment.liber
      push:
        - meta_scope: comment.line.double-slash.liber
        - match: $
          pop: true

  Ë∫çÈªû:
    - match: '\*'
      scope: punctuation.definition.comment.liber
      push:
        - meta_scope: comment.line.double-slash.liber
        - match: $\n?
          pop: true

  ÂäüËÉΩ:
    - match: '^>'
      scope: support.function.builtin.liber
      push:
        - match: '\w+\b'
          scope: variable.function.liber
          push:
            - meta_include_prototype: true
            - meta_scope: variable.parameter.liber
            - match: '$'
              pop: true
        - match: '$'
          pop: true

  Â∞çË©±:
    - match: (^[^:]\S*?)(?=(?=[ :Ôºö\|ÔΩúüê¥\(\[„Äå])(?:\s*[\|ÔΩúüê¥]\s*(\S*?))?\s*(\[\S*?\])?\s*(\(\S*\))?(\s*(?:[:Ôºö].*)|\s*(?:[„Äå"].*)?$))
      scope: entity.name.tag.liber
      push:
        - include: ÊñáÊú¨
        - match: '\(\S*\)\[\S*\]'
          push:
            - meta_scope: invalid.illegal.attribute-order.liber
            - match: ''
              pop: true
        - match: '\('
          scope: punctuation.definition.delimeter.parenthesis.liber
          push:
            - meta_scope: entity.other.attribute-name.liber
            - match: '\)'
              pop: true
        - match: '\['
          scope: punctuation.definition.delimeter.brackets.liber
          push:
            - meta_scope: entity.other.attribute-name.liber
            - match: '\]'
              pop: true
        - match: '\s+[\|ÔΩúüê¥]\s+|\s+[\|ÔΩúüê¥]|[\|ÔΩúüê¥]\s+'
          scope: invalid.illegal.extra-spaces.liber
        - match: '[\|ÔΩúüê¥]'
          scope: keyword.operator.binary.liber
        - match: '(?<=.)[:Ôºö]'
          scope: keyword.operator.binary.liber
        - match: '[\)\]]'
          scope: invalid.illegal.stray-bracket-end.liber
        - match: '(?<=(„Äç|"))'
          pop: true
        - match: '$'
          pop: true

  Èè°È†≠:
    - match: '^[+-]'
      scope: support.function.builtin.liber
      push:
        - meta_scope: variable.parameter.liber
        - match: $\n?
          pop: true

  ÊóÅÁôΩ:
    - match: ^.+
      push:
        - meta_scope: text.plain.liber
        - match: $
          pop: true

  ÊñáÊú¨:
    - match: '„Äå[\s\S]*?'
      scope: punctuation.definition.string.liber
      push:
        - meta_scope: string.quoted.ideographic.liber
        - match: '„Äç'
          scope: punctuation.definition.string.liber
          pop: true
    - match: '"[\s\S]*?'
      scope: punctuation.definition.string.liber
      push:
        - meta_scope: string.quoted.double.liber
        - match: '"'
          scope: punctuation.definition.string.liber
          pop: true  
    - match: '(?<=[:Ôºö]).+'
      push:
        - meta_scope: string.quoted.liber
        - match: '$'
          pop: true

  Ë∑≥ËΩâ:
    - match: ^(\?)(.+?)(->)(.+)$
      captures:
        1: support.function.builtin.liber
        2: variable.parameter.liber
        3: keyword.operator.binary.liber
        4: variable.function.liber

  ÂúñÁâá:
    - match: ^(={3,})(.+)$$
      captures:
        1: support.function.builtin.liber
        2: variable.parameter.liber

  ÊåÅÁ∫å:
    - match: ^(@)\s*(\S+?)([\|+-])?([^\|+-]+?)$
      captures:
        1: support.function.builtin.liber
        2: variable.parameter.liber
        3: keyword.operator.binary.liber
        4: variable.function.liber

  ÂµåÂÖ•html:
    - match: '^(```(HTML|html)?)$'
      scope: support.function.liber
      push:
        - match: '```'
          scope: support.function.liber
          pop: true

        - match: '\s*'
          push:
            - include: 'scope:text.html.basic'
          with_prototype:
             - match: '(?=(```))'
               pop: true
  ÂµåÂÖ•py:
    - match: '^(```(py|python)?)$'
      scope: support.function.liber
      push:
        - match: '```'
          scope: support.function.liber
          pop: true

        - match: '\s*'
          push:
            - include: 'scope:source.python'
          with_prototype:
             - match: '(?=(```))'
               pop: true
  ÂµåÂÖ•js:
    - match: '^(```(js|javascript)?)$'
      scope: support.function.liber
      push:
        - match: '```'
          scope: support.function.liber
          pop: true

        - match: '\s*'
          push:
            - include: 'scope:source.js'
          with_prototype:
             - match: '(?=(```))'
               pop: true

